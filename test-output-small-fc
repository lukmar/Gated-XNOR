Using gpu device 0: GeForce GTX TITAN X (CNMeM is disabled, CuDNN 4007)
WARNING (theano.sandbox.cuda): Ignoring call to use(1), GPU number 0 is already in use.
alpha = 0.1
epsilon = 0.0001
batch_size = 5
num_epochs = 3
activation = discrete_neuron_3states
discrete = True
H = 1.0
N = 1.0 Num_States = 3.0
tanh = 3.0
LR_start = 0.1
LR_fin = 1e-07
LR_decay = 0.01
Loading MNIST dataset...
mnist_GXNOR.py:407: VisibleDeprecationWarning: using a boolean instead of an integer will result in an error in the future
  y[i][i%2==1] = 1
X = 
[[[[ 0.          0.          0.        ]
   [ 0.          0.          0.        ]
   [ 0.          0.          0.        ]]]


 [[[ 0.1         0.1         0.1       ]
   [ 0.1         0.1         0.1       ]
   [ 0.1         0.1         0.1       ]]]


 [[[ 0.2         0.2         0.2       ]
   [ 0.2         0.2         0.2       ]
   [ 0.2         0.2         0.2       ]]]


 [[[ 0.30000001  0.30000001  0.30000001]
   [ 0.30000001  0.30000001  0.30000001]
   [ 0.30000001  0.30000001  0.30000001]]]


 [[[ 0.40000001  0.40000001  0.40000001]
   [ 0.40000001  0.40000001  0.40000001]
   [ 0.40000001  0.40000001  0.40000001]]]]
y = 
[[ 1. -1. -1.]
 [-1.  1. -1.]
 [ 1. -1. -1.]
 [-1.  1. -1.]
 [ 1. -1. -1.]]
Building the CNN...
train_out __str__ = [[ 0.  0.  0.]
 [ 0.  0.  0.]
 [ 6.  6.  6.]
 [ 6.  6.  6.]
 [ 6.  6.  6.]]
loss shape = (5, 3)
loss __str__ = [[  1.   1.   1.]
 [  1.   1.   1.]
 [  0.  49.  49.]
 [ 49.   0.  49.]
 [  0.  49.  49.]]
mean-loss __str__ = [ 10.19999981  20.          29.79999924]
batch-loss __str__ = 20.0
grad-loss __str__ = [[-0.13333334  0.13333334  0.13333334]
 [ 0.13333334 -0.13333334  0.13333334]
 [-0.          0.9333334   0.9333334 ]
 [ 0.9333334  -0.          0.9333334 ]
 [-0.          0.9333334   0.9333334 ]]
grad-loss-mean __str__ = [ 0.18666668  0.37333336  0.61333334]
error Input0 __str__ = [[[[ 0.          0.          0.        ]
   [ 0.          0.          0.        ]
   [ 0.          0.          0.        ]]]


 [[[ 0.80000001  0.80000001  0.80000001]
   [ 0.80000001  0.80000001  0.80000001]
   [ 0.80000001  0.80000001  0.80000001]]]


 [[[ 0.          0.          0.        ]
   [ 0.          0.          0.        ]
   [ 0.          0.          0.        ]]]


 [[[ 0.          0.          0.        ]
   [ 0.          0.          0.        ]
   [ 0.          0.          0.        ]]]


 [[[ 0.          0.          0.        ]
   [ 0.          0.          0.        ]
   [ 0.          0.          0.        ]]]]


error Dense1 __str__ = [[ 0.          0.          0.          0.          0.          0.        ]
 [ 0.13333334  0.13333334  0.13333334  0.13333334  0.13333334  0.13333334]
 [ 0.          0.          0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.          0.          0.        ]]


error Act2 __str__ = [[ 0.13333334  0.13333334  0.13333334  0.13333334  0.13333334  0.13333334]
 [ 0.13333334  0.13333334  0.13333334  0.13333334  0.13333334  0.13333334]
 [ 1.86666679  1.86666679  1.86666679  1.86666679  1.86666679  1.86666679]
 [ 1.86666679  1.86666679  1.86666679  1.86666679  1.86666679  1.86666679]
 [ 1.86666679  1.86666679  1.86666679  1.86666679  1.86666679  1.86666679]]


error Dense3 __str__ = [[-0.13333334  0.13333334  0.13333334]
 [ 0.13333334 -0.13333334  0.13333334]
 [-0.          0.9333334   0.9333334 ]
 [ 0.9333334  -0.          0.9333334 ]
 [-0.          0.9333334   0.9333334 ]]


grad_w Dense1 __str__ = CudaNdarray([[ 0.01333333  0.01333333  0.01333333  0.01333333  0.01333333  0.01333333]
 [ 0.01333333  0.01333333  0.01333333  0.01333333  0.01333333  0.01333333]
 [ 0.01333333  0.01333333  0.01333333  0.01333333  0.01333333  0.01333333]
 [ 0.01333333  0.01333333  0.01333333  0.01333333  0.01333333  0.01333333]
 [ 0.01333333  0.01333333  0.01333333  0.01333333  0.01333333  0.01333333]
 [ 0.01333333  0.01333333  0.01333333  0.01333333  0.01333333  0.01333333]
 [ 0.01333333  0.01333333  0.01333333  0.01333333  0.01333333  0.01333333]
 [ 0.01333333  0.01333333  0.01333333  0.01333333  0.01333333  0.01333333]
 [ 0.01333333  0.01333333  0.01333333  0.01333333  0.01333333  0.01333333]])
grad_w Dense3 __str__ = CudaNdarray([[ 0.9333334   1.86666679  2.80000019]
 [ 0.9333334   1.86666679  2.80000019]
 [ 0.9333334   1.86666679  2.80000019]
 [ 0.9333334   1.86666679  2.80000019]
 [ 0.9333334   1.86666679  2.80000019]
 [ 0.9333334   1.86666679  2.80000019]])
updates __str__ = [[ 0.99866664  0.99866664  0.99866664  0.99866664  0.99866664  0.99866664]
 [ 0.99866664  0.99866664  0.99866664  0.99866664  0.99866664  0.99866664]
 [ 0.99866664  0.99866664  0.99866664  0.99866664  0.99866664  0.99866664]
 [ 0.99866664  0.99866664  0.99866664  0.99866664  0.99866664  0.99866664]
 [ 0.99866664  0.99866664  0.99866664  0.99866664  0.99866664  0.99866664]
 [ 0.99866664  0.99866664  0.99866664  0.99866664  0.99866664  0.99866664]
 [ 0.99866664  0.99866664  0.99866664  0.99866664  0.99866664  0.99866664]
 [ 0.99866664  0.99866664  0.99866664  0.99866664  0.99866664  0.99866664]
 [ 0.99866664  0.99866664  0.99866664  0.99866664  0.99866664  0.99866664]]
updates __str__ = [[ 0.90666664  0.81333333  0.71999997]
 [ 0.90666664  0.81333333  0.71999997]
 [ 0.90666664  0.81333333  0.71999997]
 [ 0.90666664  0.81333333  0.71999997]
 [ 0.90666664  0.81333333  0.71999997]
 [ 0.90666664  0.81333333  0.71999997]]
/home/muetzi/.local/lib/python2.7/site-packages/theano/sandbox/rng_mrg.py:62: UserWarning: Warning, Cannot compute test value: input 0 (A) of Op DotModulo(A, s, m, A2, s2, m2) missing default value
  o = DotModulo()(A_sym, s_sym, m_sym, A2_sym, s2_sym, m2_sym)
/home/muetzi/.local/lib/python2.7/site-packages/theano/sandbox/rng_mrg.py:62: UserWarning: Warning, Cannot compute test value: input 1 (s) of Op DotModulo(A, s, m, A2, s2, m2) missing default value
  o = DotModulo()(A_sym, s_sym, m_sym, A2_sym, s2_sym, m2_sym)
/home/muetzi/.local/lib/python2.7/site-packages/theano/sandbox/rng_mrg.py:62: UserWarning: Warning, Cannot compute test value: input 2 (m) of Op DotModulo(A, s, m, A2, s2, m2) missing default value
  o = DotModulo()(A_sym, s_sym, m_sym, A2_sym, s2_sym, m2_sym)
/home/muetzi/.local/lib/python2.7/site-packages/theano/sandbox/rng_mrg.py:62: UserWarning: Warning, Cannot compute test value: input 3 (A2) of Op DotModulo(A, s, m, A2, s2, m2) missing default value
  o = DotModulo()(A_sym, s_sym, m_sym, A2_sym, s2_sym, m2_sym)
/home/muetzi/.local/lib/python2.7/site-packages/theano/sandbox/rng_mrg.py:62: UserWarning: Warning, Cannot compute test value: input 4 (s2) of Op DotModulo(A, s, m, A2, s2, m2) missing default value
  o = DotModulo()(A_sym, s_sym, m_sym, A2_sym, s2_sym, m2_sym)
/home/muetzi/.local/lib/python2.7/site-packages/theano/sandbox/rng_mrg.py:62: UserWarning: Warning, Cannot compute test value: input 5 (m2) of Op DotModulo(A, s, m, A2, s2, m2) missing default value
  o = DotModulo()(A_sym, s_sym, m_sym, A2_sym, s2_sym, m2_sym)
discrete-updates __str__ = [[ 1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.]]
discrete-updates __str__ = [[ 1.  0.  1.]
 [ 1.  1.  0.]
 [ 1.  1.  0.]
 [ 1.  0.  0.]
 [ 0.  1.  0.]
 [ 0.  0.  1.]]
Training...
grad_w Dense1 __str__ = CudaNdarray([[ 0.013333  0.013333  0.013333  0.013333  0.013333  0.013333]
 [ 0.013333  0.013333  0.013333  0.013333  0.013333  0.013333]
 [ 0.013333  0.013333  0.013333  0.013333  0.013333  0.013333]
 [ 0.013333  0.013333  0.013333  0.013333  0.013333  0.013333]
 [ 0.013333  0.013333  0.013333  0.013333  0.013333  0.013333]
 [ 0.013333  0.013333  0.013333  0.013333  0.013333  0.013333]
 [ 0.013333  0.013333  0.013333  0.013333  0.013333  0.013333]
 [ 0.013333  0.013333  0.013333  0.013333  0.013333  0.013333]
 [ 0.013333  0.013333  0.013333  0.013333  0.013333  0.013333]])
grad_w Dense3 __str__ = CudaNdarray([[ 0.933333  1.866667  2.8     ]
 [ 0.933333  1.866667  2.8     ]
 [ 0.933333  1.866667  2.8     ]
 [ 0.933333  1.866667  2.8     ]
 [ 0.933333  1.866667  2.8     ]
 [ 0.933333  1.866667  2.8     ]])
Epoch 1 of 3 took 0.00411486625671s
  update_type:                   200
  LR:                            0
  th:                            3.0
  LR_decay:                      0.01
  training loss:                 20.0
  validation loss:               20.0
  validation error rate:         40.000000596%
  best epoch:                    1
  best test error rate:          40.000000596%
  test loss:                     20.0
  test error rate:               40.000000596%
grad_w Dense1 __str__ = CudaNdarray([[ 0.013333  0.013333  0.013333  0.013333  0.013333  0.013333]
 [ 0.013333  0.013333  0.013333  0.013333  0.013333  0.013333]
 [ 0.013333  0.013333  0.013333  0.013333  0.013333  0.013333]
 [ 0.013333  0.013333  0.013333  0.013333  0.013333  0.013333]
 [ 0.013333  0.013333  0.013333  0.013333  0.013333  0.013333]
 [ 0.013333  0.013333  0.013333  0.013333  0.013333  0.013333]
 [ 0.013333  0.013333  0.013333  0.013333  0.013333  0.013333]
 [ 0.013333  0.013333  0.013333  0.013333  0.013333  0.013333]
 [ 0.013333  0.013333  0.013333  0.013333  0.013333  0.013333]])
grad_w Dense3 __str__ = CudaNdarray([[ 0.933333  1.866667  2.8     ]
 [ 0.933333  1.866667  2.8     ]
 [ 0.933333  1.866667  2.8     ]
 [ 0.933333  1.866667  2.8     ]
 [ 0.933333  1.866667  2.8     ]
 [ 0.933333  1.866667  2.8     ]])
Epoch 2 of 3 took 0.00379395484924s
  update_type:                   200
  LR:                            0.1
  th:                            3.0
  LR_decay:                      0.01
  training loss:                 20.0
  validation loss:               3.09304904938
  validation error rate:         40.000000596%
  best epoch:                    2
  best test error rate:          40.000000596%
  test loss:                     3.09304904938
  test error rate:               40.000000596%
grad_w Dense1 __str__ = CudaNdarray([[-0.015822  0.012089  0.012089 -0.003733  0.        0.012089]
 [-0.015822  0.012089  0.012089 -0.003733  0.        0.012089]
 [-0.015822  0.012089  0.012089 -0.003733  0.        0.012089]
 [-0.015822  0.012089  0.012089 -0.003733  0.        0.012089]
 [-0.015822  0.012089  0.012089 -0.003733  0.        0.012089]
 [-0.015822  0.012089  0.012089 -0.003733  0.        0.012089]
 [-0.015822  0.012089  0.012089 -0.003733  0.        0.012089]
 [-0.015822  0.012089  0.012089 -0.003733  0.        0.012089]
 [-0.015822  0.012089  0.012089 -0.003733  0.        0.012089]])
grad_w Dense3 __str__ = CudaNdarray([[ 0.654222  0.750222  0.277333]
 [ 0.654222  0.750222  0.277333]
 [ 0.654222  0.750222  0.277333]
 [ 0.654222  0.750222  0.277333]
 [ 0.654222  0.750222  0.277333]
 [ 0.654222  0.750222  0.277333]])
Epoch 3 of 3 took 0.00377678871155s
  update_type:                   200
  LR:                            0.001
  th:                            3.0
  LR_decay:                      0.01
  training loss:                 3.09304881096
  validation loss:               3.09194922447
  validation error rate:         40.000000596%
  best epoch:                    3
  best test error rate:          40.000000596%
  test loss:                     3.09194922447
  test error rate:               40.000000596%

